@use "sass:map";
@use "@scss/framework/_var/_vars.scss" as *;
@use "@scss/framework/utilities/utilities.scss" as *;
@use "@scss/framework/foundation/foundation.scss" as *;
@use "@scss/global-components/btn/_g--btn-01" as *;
@use  "@scss/global-components/link/_g--link-01" as *;

.c--form-d {
    @extend .f--background-a;
    padding: $measure * 7 $measure * 5;

    form {
        @extend .u--display-flex;
        @extend .u--flex-direction-column;

        label > span {
            @extend .f--font-j;
            color: rgba(map.get($color-options, b), 0.6);
            // @extend .u--font-light;
        }
    
        input:not([type="checkbox"]):not([type="submit"]), select, textarea {
            @extend .u--width-100;
            @extend .f--font-i;
            @extend .u--font-light;
            color: map.get($color-options, b) !important;
            background: transparent !important;
            padding: $measure $measure $measure 0;
            border-width: 0 0 1px 0;
            border-color: map.get($color-options, b);
            border-radius: 0;
            border-style: solid;
        }

        input[type="submit"] {
            margin-top: $measure * 2;
            @extend .g--btn-01;
        }

        textarea {
            width: 100% !important;
            resize: none !important;
            min-height: $measure * 15;
        }

        .hs-fieldtype-select > .input {
            @extend .u--position-relative;

            &::after {
                @extend .u--position-absolute;
                @extend .u--display-block;
                pointer-events: none;
                content: "";
                width: 11px;
                height: 11px;
                top: 50%;
                right: $measure * 2;
                border-bottom: 1px solid map.get($color-options, c);
                border-right: 1px solid map.get($color-options, c);
                transform: rotate(45deg) translateY(-100%);
            }
        }

        .hs-error-msg {
            @extend .f--font-j;
            @extend .f--color-c;
            margin-bottom: 0;
            margin-top: $measure;
        }
        .hs-error-msgs {
            li {
                label {
                    @extend .f--font-j;
                    @extend .f--color-c;
                    margin-bottom: 0;
                    margin-top: $measure;
                    a {
                        cursor: pointer;
                        @extend .g--link-01;
                        @extend .g--link-01--second;
                    }
                }
            }
        }

        .hs-fieldtype-booleancheckbox {
            order: 1;
            @media all and ($viewport-type:$tablets) {
                max-width: 100%;
            }
        }
        .inputs-list {
            @extend .u--display-flex;
            list-style: none;
            flex-wrap: wrap;
            .hs-form-booleancheckbox {
                label {
                    @extend .u--position-relative;
                    margin-bottom: 0;
                    input {
                        @extend .u--position-absolute;
                        @extend .u--width-100;
                        opacity: 0;
                        cursor: pointer;
                        left: 0;
                        top: 0;
                        @extend .u--height-100;
                        z-index: 0;
                        padding: 0;
                        &:checked ~ span::after {
                            opacity: 1;
                        }
                    }
                    span {
                        @extend .u--position-relative;
                        @extend .u--display-block;
                        @extend .f--font-j;
                        color: rgba(map.get($color-options, b), 0.6);
                        cursor: pointer;
                        padding-left: calc(#{$measure*1.5} + #{$measure*2});
                        a {
                            @extend .g--link-01;
                            @extend .g--link-01--sixth;
                        }
                        .hs-form-required,
                        span {
                            display: inline;
                            padding-left: 0;
                            &::before {
                                content: none;
                            }
                        }
                        &::before {
                            content: "";
                            @extend .u--position-absolute;
                            left: 0;
                            top: 50%;
                            transform: translateY(-50%);
                            border: 1px solid rgba(map.get($color-options, b), 0.6);
                            height: $measure*2;
                            width: $measure*2;
                        }
                        &::after {
                            content: "";
                            opacity: 0;
                            @extend .u--position-absolute;
                            top: 50%;
                            transform: translate(-50%, -50%);
                            left: calc(#{$measure*2}*.5);
                            width: calc(#{$measure*2}*.6);
                            height: calc(#{$measure*2}*.6);
                            max-width: calc(#{$measure*2} - 4px);
                            max-height: calc(#{$measure*2} - 4px);
                            background-color: rgba(map.get($color-options, b), 0.6);
                            transition: opacity $time-b $ease-standard-a;
                        }
                    }
                }
            }
        }
        .hs-recaptcha {
            // width: 100%;
            order: 1;
            margin-bottom: 0;
        }
    
        .hs_error_rollup {
            @extend .u--display-none;
        }

        .submitted-message {
            @extend .f--font-g;
            @extend .f--color-k;
            @extend .u--font-light;
        }

        fieldset.form-columns-2, fieldset.form-columns-1 {
            @extend .u--width-100;
            @extend .u--display-flex;
            max-width: 100%;
            gap: $measure * 3;
            margin-bottom: $measure * 3;

            .field {
                flex: 1;

                .input {
                    margin: 0;
                }
            }

            @media all and ($viewport-type: $mobile) {
                flex-direction: column;

                .field {
                    flex: 100%;
                    width: 100%;
                }
            }
        }
    }
}