$space-values: (0, 1, 2, 3, 4, 5, 7, 8, 10, 12, 15, 18, 20, 22) !default;

$space-prefixes: (
  // p  : padding,
  pt: padding-top,
  // pr : padding-right,
  pb: padding-bottom,
  // pl : padding-left,
  // m  : margin,
  mt: margin-top,
  mr: margin-right,
  mb: margin-bottom,
  // ml : margin-left,
) !default;

$space-breakpoints: (
  all: $all,
  // desktop: $desktop,
  // laptop: $laptop,
  // tabletl: $tabletl,
  tabletm: $tabletm,
  tablets: $tablets,
  // mobile: $mobile,
);

@mixin make-spaces($values, $prefixes, $breakpoints) {
  @each $breakpoint-name, $breakpoint-value in $breakpoints {
    // if xs value = 0, set it global without media queries
    @if ($breakpoint-value == 0) {
      @each $attr-short, $attr-long in $prefixes {
        @each $value in $values {
          .f--#{$attr-short}-#{$value} {
            #{$attr-long}: calc(#{$measure} * #{$value});
          }
        }
      }
    }
    // breakpoint values that not equal to 0
    @else {
      @media screen and ($viewport-type: $breakpoint-value) {
        @each $attr-short, $attr-long in $prefixes {
          @each $value in $values {
            .f--#{$attr-short}-#{$breakpoint-name}-#{$value} {
              #{$attr-long}: calc(#{$measure} * #{$value});
            }
          }
        }
      }
    }
  }
}

@if variable-exists(space-breakpoints) {
  @include make-spaces($space-values, $space-prefixes, $space-breakpoints);
} @else {
  @include make-spaces($space-values, $space-prefixes, $breakpoints-grid);
}
